from datetime import datetime
from unittest.mock import Mock
from typing import Any, Dict

import pandas as pd
import pytest


@pytest.fixture
def mocker() -> Mock:
    """Фикстура для создания mock-объектов"""
    return Mock()


@pytest.fixture
def sample_transactions() -> pd.DataFrame:
    """Фикстура с тестовыми данными транзакций"""
    data: Dict[str, Any] = {
        "Дата операции": [
            "31.12.2021 16:44:00",
            "15.05.2023 10:30:00",
            "15.05.2023 18:15:00",
            "01.01.2023 00:01:00",
            "30.04.2023 23:59:00",
        ],
        "Описание": [
            "Покупка в магазине",
            "Оплата услуг",
            "Перевод между счетами",
            "Абонемент в спортзал",
            "Возврат средств",
        ],
        "Категория": ["Супермаркеты", "Услуги", "Переводы", "Фитнес", "Возвраты"],
        "Сумма операции": [-1500.50, -2500.00, 10000.00, -3000.00, 500.50],
        "Бонусы (включая кэшбэк)": [15.05, 0.00, 0.00, 30.00, 0.00],
        "Номер карты": [
            "1234567890123456",
            "1234567890123456",
            None,
            "9876543210987654",
            "9876543210987654",
        ],
    }
    df = pd.DataFrame(data)
    df["Дата операции"] = pd.to_datetime(
        df["Дата операции"], format="%d.%m.%Y %H:%M:%S"
    )
    return df


@pytest.fixture
def mock_datetime() -> datetime:
    """Фикстура с фиксированной датой для тестов"""
    return datetime(2023, 5, 15, 14, 30, 0)
